import { {% for definition in spec.definitions %}{{definition.name|caseUcfirst}}, {% endfor %} } from '../appwrite-common';
{% for definition in spec.definitions %}
{% if definition.name == "document" %}
export type Document<T> = T & DocumentBase;

/**
 * {{ definition.description }}
 */
export class AppWriteBaseModel implements Partial<DocumentBase> {
{% for property in definition.properties %}
  /**
   * {{ property.description }}
   */
  {{ property.name }}?{% if not property.required %}?{% endif %}: {{ property | getSubSchema(spec) | raw }} = {{ property | getDefaultValue(spec)}};
{% endfor %}
}

export interface DocumentBase {
{% for property in definition.properties %}
  /**
   * {{ property.description }}
   */
  {{ property.name }}{% if not property.required %}?{% endif %}: {{ property | getSubSchema(spec) | raw }};
{% endfor %}
}
{% endif %}
{% endfor %}